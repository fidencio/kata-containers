From 564f7444da236e556e2a95aeee7b01b1f1ec59e1 Mon Sep 17 00:00:00 2001
From: Isaku Yamahata <isaku.yamahata@intel.com>
Date: Tue, 20 Jul 2021 02:00:04 -0700
Subject: [PATCH 0442/1418] KVM: TDX: fix failure of kvm_read_cr0() on TD
 startup

0aa1837533e5 "KVM: x86: Properly reset MMU context at vCPU RESET/INIT"
added CR0 read and mmu_reload on vcpu reset.  This is called on vcpu
creation too.  It causes unintentional reading of CR0 for TD on vcpu
creation and failure of tdh_vp_rd(CR0).  Avoid it by setting mask on vcpu
creation.

Fixes: b52b3a780955 ("KVM: TDX: Add "basic" support for building and running Trust Domains")
Signed-off-by: Isaku Yamahata <isaku.yamahata@intel.com>
---
 arch/x86/kvm/vmx/tdx.c | 7 ++++++-
 1 file changed, 6 insertions(+), 1 deletion(-)

diff --git a/arch/x86/kvm/vmx/tdx.c b/arch/x86/kvm/vmx/tdx.c
index 91652bf9e215..54babec50719 100644
--- a/arch/x86/kvm/vmx/tdx.c
+++ b/arch/x86/kvm/vmx/tdx.c
@@ -488,7 +488,11 @@ static int tdx_vcpu_create(struct kvm_vcpu *vcpu)
 	vcpu->arch.efer = EFER_SCE | EFER_LME | EFER_LMA | EFER_NX;
 
 	vcpu->arch.switch_db_regs = KVM_DEBUGREG_AUTO_SWITCH_GUEST;
-	vcpu->arch.cr0_guest_owned_bits = -1ul;
+	/*
+	 * kvm_arch_vcpu_reset(init_event=false) reads cr0 to reset MMU.
+	 * Prevent to read CR0 via SEAMCALL.
+	 */
+	vcpu->arch.cr0_guest_owned_bits = 0ul;
 	vcpu->arch.cr4_guest_owned_bits = -1ul;
 
 	vcpu->arch.tsc_offset = to_kvm_tdx(vcpu->kvm)->tsc_offset;
@@ -615,6 +619,7 @@ static void tdx_vcpu_reset(struct kvm_vcpu *vcpu, bool init_event)
 		goto td_bugged;
 
 	vcpu->arch.mp_state = KVM_MP_STATE_RUNNABLE;
+	vcpu->arch.cr0_guest_owned_bits = -1ul;
 
 	return;
 
-- 
2.31.1

