From 3423cef8948af4fafb89b293e888cda075d7a2ab Mon Sep 17 00:00:00 2001
From: Kumar Sanjay K <sanjay.k.kumar@intel.com>
Date: Mon, 11 Jan 2021 01:18:17 +0800
Subject: [PATCH 0663/1418] iommu/vt-d: Add an option force using SL for IOVA

change IOVA mapping from FL to SL via an intel_iommu=iova_sl command line parameter.

Signed-off-by: Kumar Sanjay K <sanjay.k.kumar@intel.com>
---
 drivers/iommu/intel/iommu.c | 13 +++++++++++++
 1 file changed, 13 insertions(+)

diff --git a/drivers/iommu/intel/iommu.c b/drivers/iommu/intel/iommu.c
index aba52dc81178..de965ee4c9ae 100644
--- a/drivers/iommu/intel/iommu.c
+++ b/drivers/iommu/intel/iommu.c
@@ -355,6 +355,9 @@ static phys_addr_t intel_iommu_iova_to_phys(struct iommu_domain *domain,
 int dmar_disabled = !IS_ENABLED(CONFIG_INTEL_IOMMU_DEFAULT_ON);
 int intel_iommu_sm = IS_ENABLED(CONFIG_INTEL_IOMMU_SCALABLE_MODE_DEFAULT_ON);
 
+/* == 0 --> use FL for IOVA (default), != 0 --> use SL for IOVA */
+static int default_iova = 0;
+
 int intel_iommu_enabled = 0;
 EXPORT_SYMBOL_GPL(intel_iommu_enabled);
 
@@ -465,6 +468,12 @@ static int __init intel_iommu_setup(char *str)
 		} else if (!strncmp(str, "tboot_noforce", 13)) {
 			pr_info("Intel-IOMMU: not forcing on after tboot. This could expose security risk for tboot\n");
 			intel_iommu_tboot_noforce = 1;
+		} else if (!strncmp(str, "qi_done_no_cpu_relax", 19)) {
+			pr_info("Intel-IOMMU: no cpu_relax() in qi\n");
+			qi_done_no_cpu_relax = 1;
+		} else if (!strncmp(str, "iova_sl", 7)) {
+			pr_info("Intel-IOMMU: default SL IOVA enabled\n");
+			default_iova = 1;
 		}
 
 		str += strcspn(str, ",");
@@ -1900,6 +1909,10 @@ static void free_dmar_iommu(struct intel_iommu *iommu)
  */
 static bool first_level_by_default(void)
 {
+	/* Change IOVA mapping to SL instead of FL */
+	if (default_iova)
+		return false;
+
 	return scalable_mode_support() && intel_cap_flts_sanity();
 }
 
-- 
2.31.1

