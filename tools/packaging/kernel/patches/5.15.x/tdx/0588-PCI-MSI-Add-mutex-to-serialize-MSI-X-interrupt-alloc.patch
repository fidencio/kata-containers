From 0972e15795612827a47c1ad3d69e57454a855d40 Mon Sep 17 00:00:00 2001
From: Megha Dey <megha.dey@intel.com>
Date: Wed, 8 Sep 2021 19:37:13 -0700
Subject: [PATCH 0588/1418] PCI/MSI: Add mutex to serialize MSI-X interrupt
 allocation

This is a preparatory patch to enable dynamic allocation of MSI-X
interrupts.

After enabling dynamic allocation of MSI-X interrupts, prevent
concurrent MSI-X interrupt allocations to the same device by using a
mutex. Until now, the device msi_list was immutable but once dynamic
allocation of MSI-X is enabled, entries can be added or removed from
this list, and thus needs to be protected.

No functional change.

Signed-off-by: Megha Dey <megha.dey@intel.com>
---
 drivers/pci/msi.c   | 4 ++++
 drivers/pci/probe.c | 3 +++
 include/linux/pci.h | 1 +
 3 files changed, 8 insertions(+)

diff --git a/drivers/pci/msi.c b/drivers/pci/msi.c
index 069d9a05775f..7ddf92db13b8 100644
--- a/drivers/pci/msi.c
+++ b/drivers/pci/msi.c
@@ -983,8 +983,10 @@ void pci_disable_msix(struct pci_dev *dev)
 	if (!pci_msi_enable || !dev || !dev->msix_enabled)
 		return;
 
+	mutex_lock(&dev->msix_mutex);
 	pci_msix_shutdown(dev);
 	free_msi_irqs(dev);
+	mutex_unlock(&dev->msix_mutex);
 }
 EXPORT_SYMBOL(pci_disable_msix);
 
@@ -1085,7 +1087,9 @@ static int __pci_enable_msix_range(struct pci_dev *dev,
 				return -ENOSPC;
 		}
 
+		mutex_lock(&dev->msix_mutex);
 		rc = __pci_enable_msix(dev, entries, nvec, affd, flags);
+		mutex_unlock(&dev->msix_mutex);
 		if (rc == 0)
 			return nvec;
 
diff --git a/drivers/pci/probe.c b/drivers/pci/probe.c
index 33888f45c385..cf7e9dc8813e 100644
--- a/drivers/pci/probe.c
+++ b/drivers/pci/probe.c
@@ -2276,6 +2276,9 @@ struct pci_dev *pci_alloc_dev(struct pci_bus *bus)
 		return NULL;
 
 	INIT_LIST_HEAD(&dev->bus_list);
+#ifdef CONFIG_PCI_MSI
+	mutex_init(&dev->msix_mutex);
+#endif
 	dev->dev.type = &pci_dev_type;
 	dev->bus = pci_bus_get(bus);
 
diff --git a/include/linux/pci.h b/include/linux/pci.h
index b82cdb411a3b..bccc0e39026b 100644
--- a/include/linux/pci.h
+++ b/include/linux/pci.h
@@ -473,6 +473,7 @@ struct pci_dev {
 #ifdef CONFIG_PCI_MSI
 	const struct attribute_group **msi_irq_groups;
 	void __iomem	*msix_table_base;	/* Base address of device MSI-X table */
+	struct mutex	msix_mutex;		/* Serialize MSI-X interrupt allocation */
 #endif
 	struct pci_vpd	vpd;
 #ifdef CONFIG_PCIE_DPC
-- 
2.31.1

