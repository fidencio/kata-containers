From 0804aaf3b8693d7e08c4293533bb2d85ff07e6ef Mon Sep 17 00:00:00 2001
From: Cathy Zhang <cathy.zhang@intel.com>
Date: Fri, 17 Dec 2021 11:09:16 +0800
Subject: [PATCH 0763/1418] Revert "x86/sgx: Introduce SGX notifier"

This reverts commit 6a15c3973be6eb5bff3fc1b874244e697e626757.
---
 arch/x86/include/asm/sgx.h     | 18 ---------------
 arch/x86/kernel/cpu/sgx/main.c | 41 ----------------------------------
 2 files changed, 59 deletions(-)

diff --git a/arch/x86/include/asm/sgx.h b/arch/x86/include/asm/sgx.h
index bd529b823c9e..a0d893851066 100644
--- a/arch/x86/include/asm/sgx.h
+++ b/arch/x86/include/asm/sgx.h
@@ -379,20 +379,6 @@ struct sgx_sigstruct {
  * Do not put any hardware-defined SGX structure representations below this
  * comment!
  */
-struct sgx_kvm_notifier;
-
-struct sgx_kvm_notifier_ops {
-	void (*halt)(struct sgx_kvm_notifier *notifier);
-	void (*resume)(struct sgx_kvm_notifier *notifier);
-};
-
-struct sgx_kvm_notifier {
-	struct list_head list;
-	const struct sgx_kvm_notifier_ops *ops;
-};
-
-extern void sgx_kvm_notifier_register(struct sgx_kvm_notifier *notifier);
-extern void sgx_kvm_notifier_unregister(struct sgx_kvm_notifier *notifier);
 
 #ifdef CONFIG_X86_SGX_KVM
 int sgx_virt_ecreate(struct sgx_pageinfo *pageinfo, void __user *secs,
@@ -446,14 +432,10 @@ static inline int sgx_updatesvn(void)
 void sgx_lock_epc(void);
 void sgx_unlock_epc(void);
 int sgx_zap_pages(void);
-void sgx_kvm_notifier_halt(void);
-void sgx_kvm_notifier_resume(void);
 #else
 static inline void sgx_lock_epc(void) { }
 static inline void sgx_unlock_epc(void) { }
 static inline int sgx_zap_pages(void) { return 0; }
-static inline void sgx_kvm_notifier_halt(void) { }
-static inline void sgx_kvm_notifier_resume(void) { }
 #endif
 
 #endif /* _ASM_X86_SGX_H */
diff --git a/arch/x86/kernel/cpu/sgx/main.c b/arch/x86/kernel/cpu/sgx/main.c
index 4d5c312fb987..dd2cffa77a4a 100644
--- a/arch/x86/kernel/cpu/sgx/main.c
+++ b/arch/x86/kernel/cpu/sgx/main.c
@@ -1233,44 +1233,3 @@ void sgx_zap_abort(void)
 
 	mutex_unlock(&sgx_zap_abort_lock);
 }
-
-static LIST_HEAD(sgx_kvm_notifier_list);
-static DEFINE_MUTEX(sgx_kvm_notifier_lock);
-
-void sgx_kvm_notifier_register(struct sgx_kvm_notifier *notifier)
-{
-	mutex_lock(&sgx_kvm_notifier_lock);
-	list_add_tail(&notifier->list, &sgx_kvm_notifier_list);
-	mutex_unlock(&sgx_kvm_notifier_lock);
-}
-EXPORT_SYMBOL(sgx_kvm_notifier_register);
-
-void sgx_kvm_notifier_unregister(struct sgx_kvm_notifier *notifier)
-{
-	mutex_lock(&sgx_kvm_notifier_lock);
-	list_del(&notifier->list);
-	mutex_unlock(&sgx_kvm_notifier_lock);
-}
-EXPORT_SYMBOL(sgx_kvm_notifier_unregister);
-
-void sgx_kvm_notifier_halt(void)
-{
-	struct sgx_kvm_notifier *notifier;
-
-	mutex_lock(&sgx_kvm_notifier_lock);
-	list_for_each_entry(notifier, &sgx_kvm_notifier_list, list) {
-		notifier->ops->halt(notifier);
-	}
-	mutex_unlock(&sgx_kvm_notifier_lock);
-}
-
-void sgx_kvm_notifier_resume(void)
-{
-	struct sgx_kvm_notifier *notifier;
-
-	mutex_lock(&sgx_kvm_notifier_lock);
-	list_for_each_entry(notifier, &sgx_kvm_notifier_list, list) {
-		notifier->ops->resume(notifier);
-	}
-	mutex_unlock(&sgx_kvm_notifier_lock);
-}
-- 
2.31.1

