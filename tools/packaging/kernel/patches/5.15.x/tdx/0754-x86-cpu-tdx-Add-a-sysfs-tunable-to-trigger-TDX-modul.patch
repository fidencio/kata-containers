From e724b1984057bbcb21293715f6df00d5f08da058 Mon Sep 17 00:00:00 2001
From: Chao Gao <chao.gao@intel.com>
Date: Wed, 20 Oct 2021 14:15:04 +0800
Subject: [PATCH 0754/1418] x86/cpu/tdx: Add a sysfs tunable to trigger TDX
 module update

A sysfs tunable /sys/firmware/tdx/tdx_module/tdx_module_reload is
introduced to trigger TDX module update.

Currently, this tunable accepts only 1, which means perform
VM-preserving TDX update: data of existing TDs and TDX module will be
lost after the update.

Admin should ensure all TDs are shut down in advance. Otherwise, TDX
module update would fail. TDX module and its sigstruct should be placed
under /lib/firmware/intel-seam and named as libtdx.so and
libtdx.so.sigstruct in advance.

Co-developed-by: Isaku Yamahata <isaku.yamahata@intel.com>
Signed-off-by: Isaku Yamahata <isaku.yamahata@intel.com>
Signed-off-by: Chao Gao <chao.gao@intel.com>
---
 arch/x86/kernel/cpu/tdx/tdx.c | 56 +++++++++++++++++++++++++++++++++++
 1 file changed, 56 insertions(+)

diff --git a/arch/x86/kernel/cpu/tdx/tdx.c b/arch/x86/kernel/cpu/tdx/tdx.c
index ed95ee8e9cdb..b0ca8d7b3b9b 100644
--- a/arch/x86/kernel/cpu/tdx/tdx.c
+++ b/arch/x86/kernel/cpu/tdx/tdx.c
@@ -1510,6 +1510,53 @@ int tdx_module_reload(void)
 	return ret;
 }
 
+#define TDX_MODULE_RELOAD	1
+
+static ssize_t tdx_module_reload_store(struct kobject *kobj,
+				       struct kobj_attribute *attr,
+				       const char *buf, size_t size)
+{
+	unsigned long val;
+	ssize_t ret;
+
+	ret = kstrtoul(buf, 0, &val);
+	if (ret)
+		return ret;
+
+	mutex_lock(&tdx_mutex);
+	ret = seam_vmxon_on_each_cpu();
+	if (ret)
+		goto unlock;
+
+	switch (val) {
+	case TDX_MODULE_RELOAD:
+		ret = tdx_module_reload();
+		break;
+
+	default:
+		ret = -EINVAL;
+	}
+	seam_vmxoff_on_each_cpu();
+unlock:
+	mutex_unlock(&tdx_mutex);
+
+	if (!ret)
+		ret = size;
+
+	return ret;
+}
+
+static struct kobj_attribute tdx_attr_module_reload = __ATTR_WO(tdx_module_reload);
+
+static struct attribute *tdx_module_ops[] = {
+	&tdx_attr_module_reload.attr,
+	NULL,
+};
+
+static const struct attribute_group tdx_module_op_group = {
+	.attrs = tdx_module_ops,
+};
+
 static int __init tdx_module_sysfs_init(void)
 {
 	int ret = 0;
@@ -1545,10 +1592,19 @@ static int __init tdx_module_sysfs_init(void)
 			       ret);
 			goto err;
 		}
+
+		ret = sysfs_create_group(tdx_module_kobj, &tdx_module_op_group);
+		if (ret) {
+			pr_err("Sysfs exporting tdx module operations failed %d\n",
+			       ret);
+			goto err_op;
+		}
 	}
 
 	return 0;
 
+err_op:
+	sysfs_remove_group(tdx_module_kobj, &tdx_module_attr_group);
 err:
 	sysfs_remove_group(tdx_module_kobj, &tdx_module_state_group);
 err_kobj:
-- 
2.31.1

