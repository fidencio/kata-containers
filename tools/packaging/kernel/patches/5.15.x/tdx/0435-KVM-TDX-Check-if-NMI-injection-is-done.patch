From 776643a706a0b28c5ce06a27478090da78de52ca Mon Sep 17 00:00:00 2001
From: Chao Gao <chao.gao@intel.com>
Date: Thu, 20 May 2021 11:42:07 +0800
Subject: [PATCH 0435/1418] KVM: TDX: Check if NMI injection is done

nmi_injected is used to queue multiple virtual NMIs properly. It needs
to be cleared to unblock injection of other pending vNMIs. Otherwise,
no vNMI will get injected.

In the case of TDX, KVM can use TDH.VP.RD to read PEND_NMI and get the
status of NMI injection. A value of 0 indicates that NMI has been
injected and then KVM can clear nmi_injected.

Signed-off-by: Chao Gao <chao.gao@intel.com>
Signed-off-by: Isaku Yamahata <isaku.yamahata@intel.com>
---
 arch/x86/kvm/vmx/tdx.c | 10 ++++++++++
 1 file changed, 10 insertions(+)

diff --git a/arch/x86/kvm/vmx/tdx.c b/arch/x86/kvm/vmx/tdx.c
index 691ca26a427c..8f807753126b 100644
--- a/arch/x86/kvm/vmx/tdx.c
+++ b/arch/x86/kvm/vmx/tdx.c
@@ -623,6 +623,14 @@ static void tdx_inject_nmi(struct kvm_vcpu *vcpu)
 	td_management_write8(to_tdx(vcpu), TD_VCPU_PEND_NMI, 1);
 }
 
+static void tdx_complete_interrupts(struct kvm_vcpu *vcpu)
+{
+	/* Avoid costly SEAMCALL if no nmi was injected */
+	if (vcpu->arch.nmi_injected)
+		vcpu->arch.nmi_injected = td_management_read8(to_tdx(vcpu),
+							      TD_VCPU_PEND_NMI);
+}
+
 static void tdx_user_return_update_cache(void)
 {
 	int i;
@@ -699,6 +707,8 @@ static fastpath_t tdx_vcpu_run(struct kvm_vcpu *vcpu)
 
 	trace_kvm_exit((unsigned int)tdx->exit_reason.full, vcpu, KVM_ISA_VMX);
 
+	tdx_complete_interrupts(vcpu);
+
 	if (tdx->exit_reason.error || tdx->exit_reason.non_recoverable)
 		return EXIT_FASTPATH_NONE;
 
-- 
2.31.1

