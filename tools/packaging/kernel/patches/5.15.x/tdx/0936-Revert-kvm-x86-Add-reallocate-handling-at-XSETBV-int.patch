From 2f833c128a49ea8998bf7dcd79a5c3088d7b2bfe Mon Sep 17 00:00:00 2001
From: Yang Zhong <yang.zhong@intel.com>
Date: Mon, 24 Jan 2022 18:03:28 -0800
Subject: [PATCH 0936/1418] Revert "kvm: x86: Add reallocate handling at XSETBV
 interception"

This reverts commit c61655426fd1d350ad5c1f8ac8f2e8e231654602.
---
 arch/x86/kvm/x86.c       | 21 ---------------------
 include/uapi/linux/kvm.h |  1 -
 2 files changed, 22 deletions(-)

diff --git a/arch/x86/kvm/x86.c b/arch/x86/kvm/x86.c
index e56cbabb8616..711a06a56a86 100644
--- a/arch/x86/kvm/x86.c
+++ b/arch/x86/kvm/x86.c
@@ -1024,18 +1024,6 @@ void kvm_set_xfd_passthrough(struct kvm_vcpu *vcpu)
 		static_call(kvm_x86_set_xfd_passthrough)(vcpu);
 }
 
-static int complete_emulated_xsetbv(struct kvm_vcpu *vcpu)
-{
-	return kvm_skip_emulated_instruction(vcpu);
-}
-
-static void kvm_xsetbv_user_space(struct kvm_vcpu *vcpu, u32 exit_reason,
-				  int (*completion)(struct kvm_vcpu *vcpu))
-{
-	vcpu->run->exit_reason = exit_reason;
-	vcpu->arch.complete_userspace_io = completion;
-}
-
 static int __kvm_set_xcr(struct kvm_vcpu *vcpu, u32 index, u64 xcr)
 {
 	u64 xcr0 = xcr;
@@ -1083,15 +1071,6 @@ int kvm_emulate_xsetbv(struct kvm_vcpu *vcpu)
 		kvm_inject_gp(vcpu, 0);
 		return 1;
 	}
-	if (guest_cpuid_has(vcpu, X86_FEATURE_XFD)) {
-		if (kvm_guest_realloc_fpstate(vcpu, vcpu->arch.guest_fpu.fpstate->xfd)) {
-			kvm_set_xfd_passthrough(vcpu);
-			/* Bounce to user space */
-			kvm_xsetbv_user_space(vcpu, KVM_EXIT_X86_XSETBV,
-					      complete_emulated_xsetbv);
-			return 0;
-		}
-	}
 
 	return kvm_skip_emulated_instruction(vcpu);
 }
diff --git a/include/uapi/linux/kvm.h b/include/uapi/linux/kvm.h
index 0eba5167f1fd..65bb9d1c513b 100644
--- a/include/uapi/linux/kvm.h
+++ b/include/uapi/linux/kvm.h
@@ -324,7 +324,6 @@ struct kvm_tdx_exit {
 #define KVM_EXIT_X86_BUS_LOCK     33
 #define KVM_EXIT_XEN              34
 #define KVM_EXIT_TDX              35
-#define KVM_EXIT_X86_XSETBV       36
 
 /* For KVM_EXIT_INTERNAL_ERROR */
 /* Emulate instruction failed. */
-- 
2.31.1

