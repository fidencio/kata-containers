From 66667f407f50a00f5a6a3b309bbb6bdacc841809 Mon Sep 17 00:00:00 2001
From: Andi Kleen <ak@linux.intel.com>
Date: Fri, 18 Jun 2021 19:11:07 -0700
Subject: [PATCH 0196/1418] pci: Don't run PCI quirks in TDX guest

For confidential guests, to protect against attacks from untrusted
hosts, don't run any of the PCI quirks. There are a lot of PCI quirks
with sometimes hairy code and it would be a lot of work to properly
audit and harden that.

In general quirks are not needed inside virtual guests, so just disable
them for TDX guest.

Signed-off-by: Andi Kleen <ak@linux.intel.com>
Signed-off-by: Kuppuswamy Sathyanarayanan <sathyanarayanan.kuppuswamy@linux.intel.com>
---
 drivers/pci/quirks.c | 7 +++++++
 1 file changed, 7 insertions(+)

diff --git a/drivers/pci/quirks.c b/drivers/pci/quirks.c
index 4537d1ea14fd..6fafee9f390c 100644
--- a/drivers/pci/quirks.c
+++ b/drivers/pci/quirks.c
@@ -29,6 +29,7 @@
 #include <linux/pm_runtime.h>
 #include <linux/suspend.h>
 #include <linux/switchtec.h>
+#include <linux/cc_platform.h>
 #include <asm/dma.h>	/* isa_dma_bridge_buggy */
 #include "pci.h"
 
@@ -101,6 +102,9 @@ void pci_fixup_device(enum pci_fixup_pass pass, struct pci_dev *dev)
 {
 	struct pci_fixup *start, *end;
 
+	if (cc_platform_has(CC_ATTR_GUEST_DEVICE_FILTER))
+		return;
+
 	switch (pass) {
 	case pci_fixup_early:
 		start = __start_pci_fixups_early;
@@ -158,6 +162,9 @@ static int __init pci_apply_final_quirks(void)
 	u8 cls = 0;
 	u8 tmp;
 
+	if (cc_platform_has(CC_ATTR_GUEST_DEVICE_FILTER))
+		return -EIO;
+
 	if (pci_cache_line_size)
 		pr_info("PCI: CLS %u bytes\n", pci_cache_line_size << 2);
 
-- 
2.31.1

