From 9f4aebc0cf4b4fe69122a62e71f23fe59edcbf89 Mon Sep 17 00:00:00 2001
From: Liu Yi L <yi.l.liu@intel.com>
Date: Thu, 22 Jul 2021 22:29:36 +0800
Subject: [PATCH 0666/1418] iommu/vt-d: Fix an issue in
 intel_svm_free_async_fn()

For subdevices, intel_svm_free_async_fn() should be the same cleanup
work as intel_sva_unbind_gpasid(). Deleting the per-pasid fault_data
is part of it. Without this, the next time the same pasid was used, it
will report failure when trying to bind it to a fault_data.

Signed-off-by: Liu Yi L <yi.l.liu@intel.com>
Signed-off-by: Yi Sun <yi.y.sun@linux.intel.com>
---
 drivers/iommu/intel/svm.c   | 7 +++++++
 include/linux/intel-iommu.h | 1 +
 2 files changed, 8 insertions(+)

diff --git a/drivers/iommu/intel/svm.c b/drivers/iommu/intel/svm.c
index 2020806b733d..aa81452b7042 100644
--- a/drivers/iommu/intel/svm.c
+++ b/drivers/iommu/intel/svm.c
@@ -206,6 +206,11 @@ static void intel_svm_free_async_fn(struct work_struct *work)
 					svm->pasid, true);
 		intel_svm_drain_prq(sdev->dev, svm->pasid);
 		spin_unlock(&sdev->iommu->lock);
+		/*
+		 * Partial assignment needs to delete fault data
+		 */
+		if (is_aux_domain(sdev->dev, &sdev->domain->domain))
+			iommu_delete_device_fault_data(sdev->dev, svm->pasid);
 		kfree_rcu(sdev, rcu);
 	}
 	/*
@@ -540,6 +545,7 @@ int intel_svm_bind_gpasid(struct iommu_domain *domain,
 	sdev->dev = dev;
 	sdev->sid = PCI_DEVID(info->bus, info->devfn);
 	sdev->iommu = iommu;
+	sdev->domain = dmar_domain;
 
 	/* Only count users if device has aux domains */
 	if (iommu_dev_feature_enabled(dev, IOMMU_DEV_FEAT_AUX))
@@ -740,6 +746,7 @@ static struct iommu_sva *intel_svm_bind_mm(struct intel_iommu *iommu,
 			sdev->qdep = 0;
 	}
 
+	sdev->domain = info->domain;
 	/* Finish the setup now we know we're keeping it */
 	sdev->users = 1;
 	sdev->ops = ops;
diff --git a/include/linux/intel-iommu.h b/include/linux/intel-iommu.h
index a0d165a48f12..1076ace4d3e9 100644
--- a/include/linux/intel-iommu.h
+++ b/include/linux/intel-iommu.h
@@ -786,6 +786,7 @@ struct intel_svm_dev {
 	struct rcu_head rcu;
 	struct device *dev;
 	struct intel_iommu *iommu;
+	struct dmar_domain *domain;
 	struct iommu_sva sva;
 	unsigned long prq_seq_number;
 	u32 pasid;
-- 
2.31.1

